I am a big fan of the oXygen XML Integrated Development Environment.  It has many powerful features and I learn about new ones the more I use it.  I recently started a project that required me to run XQuery transform on hard-drive files using Saxon HE.  Since I normally run XQuery from within the eXist-db this was a new challenge for me. I have many XML files and many different XQueries and I wanted to run them directly from test cases in an oXygen project.  But unlike XSLT, XQuery does not have a concept of "standard input".  You need to specify a path to the document within the XQuery file itself.  So how to pass the file name from the project directly to Saxon?  Luckily, the guys from Syncro Soft (the authors of oXygen) thought about this.  You can use oXygen "Editor Variables" to be parameters to your XQuery. Here is a sample program that reads two external variables, one for the project director and one for the current file name (with extension). XQuery Program xquery version "1.0";   (: Example of how to access external "Editor Variable" variables passed   by oXygen. This one example gets us to a full file path within a   project.  See:   http://www.oxygenxml.com/doc/ug-editor/topics/editor-variables.html      for other editor variables. :)  (: oXygen project directory :) declare variable $pd as xs:string external;  (: file name with extension :) declare variable $cfne as xs:string external;  (: note the triple forward slashes before the file. :) let $path := concat('file:///', $pd, '\', $cfne)  return <results>    <project-dir>{$pd}</project-dir>    <file-name>{$cfne}</file-name>    <file-path>{$path}</file-path>    <doc-available>{doc-available($path)}</doc-available> </results>   Note that we put the project and file together to get the path to the file and use the doc-available() function to verify that the file is there. Next, we set up a transformation scenario and put the file above in the transform URL.  We have to add the parameters to the transform.  oXygen parses your XQuery for all external variables and puts them in each line for you.  For each variable put in the same variable with the ${pd} notation where the dollar sign is outside the curly braces (opposite of XQuery). Here is a screen image of these parameters and their values.   Results When we run this transform on any file on Windows we get the following: <results>    <project-dir>D:\ws\project\subdir</project-dir>    <file-name>my-input-file.xml</file-name>    <file-path>file:///D:\ws\project\subdir\my-input-file.xml</file-path>    <doc-available>true</doc-available> </results> On Mac and UNIX systems we would not use the file:/// prefix and the separators will be forward slashes. 
