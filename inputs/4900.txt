Welcome to my one week blog series, Tales from the Port, chronicling my rewriting of Project Quincy from Ruby on Rails to Django.  This series may be a little rough around the edges — I’ll be writing it every night after I accomplish my goals for that day.  But I wanted to give people a window into the life of (at least one) Digital Humanities developer.  To see what it’s like to imperfectly translate your research and theories into lines of code and then watch your project come ‘alive.’   Of course, Digital Humanities is not about writing code or knowing how to program.  DH is a community of people searching for a new way of working and researching, and we find inspiration in many disciplines.  But, this is going to be one of the more intense work weeks of my life to date, so I’m hoping you’ll keep me company. First, some background:  Project Quincy is an open source software package I wrote a few years back to trace historical networks through time and space.  It is an integral part of my dissertation and currently runs The Early American Foreign Service Database, which went live almost two years ago on October 18, 2010.  Project Quincy got its start at the University of Virginia’s Scholars’ Lab, where I was a graduate student fellow in 2008-2009.  I was very pleased with the system when I first designed it, but technology doesn’t stop when your fellowship ends.  Faced with an aging code base and an interface that could no longer accomodate the visual arguments which are becoming more and more central to my dissertation, it was time to upgrade.  I could have taken Project Quincy from Rails 2.3.8 to 3.0 and tweaked the stylesheet along the way, but I am no longer at the University of Virginia.  Last summer I was hired by the Brown University Library as their first Digital Humanities Librarian.  My new colleagues program (mostly) in Django, and I’ve already met one or two professors here who could probably use the system for their own research.  It was time to learn some new skills. I have thoroughly enjoyed learning Python and Django, so much so that I will probably write more on them once this week is over.  Since finishing up the tutorials, I have spent the last two weeks planning the port. As the week unfolds I’ll discuss how the system is changing and my reasons for making those changes.  Although both Django and Rails exist to connect databases to websites with minimal headaches for the programmer, they have different affordances and make very different assumptions about what constitutes beautiful code.   So what have I done today? Today I created the new Django project which I will be extending into ProjectQuincy.  I had hoped to have the entire data model rewritten by now, but no plan survives contact with a new development environment . . . Apparently when I got my new MacBook Pro my MySQL installation did not survive the transfer.  It took a few hours of research, then reinstalling MacPorts, before I could really get underway.  I will have more to say tomorrow on my changes to the data structure. Planning this port has been a bittersweet experience.  I’ve had a great deal of fun learning a new language and framework.  My colleagues at Brown, particularly Birkin Diana and Joseph Rhoads, have been extremely helpful: suggesting good training materials, answering questions, and teaching me the ever crucial “best practices.”  Thanks to their help, I am looking forward to having a cleaner, more robust system.  But, my fellowship year at Scholars’ Lab is a cherished memory, and so many people there helped and taught me as I figured out how to make The Early American Foreign Service Database a reality.  As I worked on the project my friends pitched in, putting their own stamp on the code base.  This new, fresh start won’t have code from Bess Sadler, Matt Mitchell, Joe Gilbert, or Wayne Graham.  For a little while it will just be my code, and that feels a little lonely.  But it won’t last.  Soon I’ll be showing the system to my colleagues at Brown, and I can’t wait to see Project Quincy afresh through their eyes.  
