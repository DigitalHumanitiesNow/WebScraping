Cognitive computing extends the range of knowledge tasks that can be performed by computers and humans. In the previous post I summarized the characteristics of a cognitive system. This post maps the characteristics to Lila features, along with candidate technology to deliver them. Limitations and future plans are also listed. Cognitive Characteristic Lila Features Candidate Technology Limitations and Future Plans 1.Â Life-world data Lila operates on unstructured data from multiple sources. Unstructured data includes author notes, digital articles and books. Data is collected from many sources, including smart phone notes, email, web pages, documents, PDFs. Lila operates on rapidly changing data, as is expected when writing a work. Lila’s functions can be re-calculated on demand. Data volume is expected to be the size of an average non-fiction work (about 100,000 words), up to 1000 full length articles, and about 100 full length books. There are existing tools for gathering content from different sources. Evernote, for example, is a candidate technology for aÂ first version of Lila. Lila’s cognitive functions can operate on data exported from Evernote. English only. Digital text only. Text must be text analyzable, i.e., no locked formats. Table content can be analyzed, but no table look-up operations. Image analysis is limited to associated text labels. 2.Â Natural questions Lila analyzes author notes, treating them as questions to be asked of other notes and unread articles and books. The followingÂ features combine to build meaningful queries on the content. The finite size of the note itself helps capture the author’s meaning. Lila use author suggested categories, tags and markup to understand what the author considers important. Lila develops a model of the author’s work, used to better understand the author’s intent.  New Lila technology will be built. This technology will be used to create more meaningful structured queries. Structured queries will be performed using existing technology, Apache Solr. Questions are constructed implicitly from author notes, not from a voice or text question box. No direct dialog interfaceÂ is provided, but see 6&7. 3.Â Reading and understanding Lila uses natural language processing (NLP) to read author notes and unread content. Language dictionaries provide an understanding of synonyms and parts-of-speech. This knowledge of language is an advance over simple keyword matching. Entity identification is performed automatically using machine learning. Identification includes person names, organizations and locations. Lila can be extended to include customÂ entity identification models. Lila uses additional input from the author to build a model of the author’s work. This model is used to better understand the the author’s meaning when questioning content. See 6&7. Existing NLP technologies, e.g., OpenNLP. New Lila technology for the model. English only. Lila does not performÂ deep parsing of syntax. 4.Â Analytics Lila calculates a correlation between author notes, and between author notes and unread content. Lila also calculates a suggested orderÂ for notes. The open source R tool can be used for statistical calculations. Language resources such as the MRC psycholinguistic database will be used to create new Lila technology for ordering notes. The calculations for suggesting order are experimental. It is likely that this function will need development over time. 5.Â Answers are structured and ordered Lila provides two visualizations: A connections view to visualize correlations between notes and unread content. A suggested order for notes, a visual hierarchy or a table of contents.  New Lila technology for the visualizations. Web-based. Lila will use open source add-ins to generate visualizations.  6.Â Taught rather than just programmed7.Â Learn from human interaction Lila’s user interface provides the author with a simple and natural way to: Classify content with categories and tags. Inline markup of entities, concepts and relations. These inputs create the model used to question content and create correlations. The author can manually edit the model with improvements. The connections view will allow the author to “pin” correct relationships and delete incorrect relationships. There are existing technologies for classifying content.Â Evernote, for example, is a candidate technology for aÂ first version of Lila. Lila’s cognitive functions can operate on data exported from Evernote. New Lila technology for the model. The Evernote interface for collecting and editing notes has limitations. In the future, Lila will need its own interface to allow for advanced functions, e.g., inline markup, sorting of notes without numbered labels. In the future, Lila may use author ordering of notes as a suggestion toward its calculated order. 
