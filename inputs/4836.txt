Last week I attended code4lib north at McMaster University in Hamilton.  It had the great vibe of the best code4lib events: low key, great mix of old and new friends, and an intense exchange of ideas tempered by ready access to serious beverages.  @adr and @ruebot did a great job putting it all together, in a great space in the libraries there. I gave a talk called "WWIC? Library Linked Data as a Customer Service Medium".  You can find the slides at slideshare and the video of the talk archived in McMaster's repository or just watch the video here:  In the talk I try to merge lessons from Paul Ford's WWIC paradigm for what the web is about with the basic tenets of publishing Linked Data by Tim Berners-Lee.  My premise is that Linked Data is great, but without adding the appropriately-tuned community feedback mechanisms that make great communities on the web work, it falls short of the potential the web has to offer. To demonstrate this argument I took downloads the last three years of Medical Subject Headings (MeSH) in the MARC format, serialized them into JSON on disk, storing the resulting files (one file per subject heading) in a directory under version control with mercurial, with each of the 2009, 2010, and 2011 revisions of MeSH loaded in turn, with changes recorded in mercurial and tagged for each year. Then I created brought up a Django project using django-hgwebproxy, which publishes cloneable mercurial repositories through Django's friendly admin view infrastructure.   To me, this demonstrated the potential for simple ways to: put a vocabulary online as linked data back the vocabulary with version control to provide access to its history use a modern web framework's url router to enable cool URIs to the vocabulary's concepts expose the version history to the web in a human-friendly UI expose the version history to anyone who wants to clone or fork the vocabulary using version control tools mix in feedback mechanisms like commenting, voting, etc. ...and in enabling all that, it offers the potential to take Linked Data from a read-only mechanism great for following your nose to cool stuff toward a read-write model integrating technical and human mechanisms for exchanging opinions and expertise about the data itself. I think. Have a look and let me know what you think.
