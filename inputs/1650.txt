I am just returning from a three-day conference on Enterprise Information Management.  I was very pleasantly surprised to meet many other very smart and warm independent consultants that do metadata and EIM consulting.  More posts about what they taught me will be coming.  But these conferences for me to constantly answer the same question over and over again.  What do I do an why don't I use traditional RDBMS systems to store metadata?  What I need is some strong statement that explains the core principal of the need for agility in metadata management.  So in that context, I would like to suggest a law of agile software development.  To give it a label, I will just use McCreary's Law for now.  McCreary's Law states the following:   The agility of any software project in inversely proportional to the square of the number of data transformations in the developer stack.   The number of data transformation in the traditional three tier-architecture (Web to Objects to RDBMS to Objects and back to web) is four.  The number of data transformation in the traditional three-tier plus XML web services is six, since web services are usually created by one transform from objects to XML and one from XML to objects.  The number of data transformations in XRX is approximately zero, since we could make an argument that XML to HTML is a 1/2 translation since the HTML and XML tags are different.  Of course if you are not changing the order all XML can be styled with CSS which is not really a transformation.  This gets around the problem of infinite developer agility if the denominator is zero.  This formula is not perfect and I am sure their will be modifications to it like adding a constant for training and IT resistance to change, but I hope people can use it to predict or explain their current development agility.  Thanks to everyone I met at the EIM conference that listened to my rants and have not discarded me as a complete metadata radical.
