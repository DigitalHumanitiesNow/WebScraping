A few weeks ago, I realized that I no longer use graphical applications.  Thatâs right.  I donât do anything with gui apps anymore, except surf the Web.  And whatâs interesting about that, is that I rarely use cloudy, ajaxy replacements for desktop applications.  Just about everything I do, I do exclusively on the command line.  And I do what everyone else does: manage email, write things, listen to music, manage my todo list, keep track of my schedule, and chat with people.  I also do a few things that most people donât do: including write software, analyze data, and keep track of students and their grades.  But whatever the case, I do all of it on the lowly command line.  I literally go for months without opening a single graphical desktop application.  In fact, I donât â strictly speaking â have a desktop on my computer.  I think this is a wonderful way to work.  I wonât say that everything can be done on the command line, but most things can, and in general, I find the cli to be faster, easier to understand, easier to integrate, more scalable, more portable, more sustainable, more consistent, and many, many times more flexible than even the most well-thought-out graphical apps.  I realize thatâs a bold series of claims.  I also realize that such matters are always open to the charge that itâs âjust meâ and the way I work, think, and view the world.  That might be true, but Iâve seldom heard a usability expert end a discourse on human factors by acknowledging that graphical systems are only really the âbestâ solution for a certain group of people or a particular set of tasks.  Most take the graphical desktop as ground truth â itâs just the way we do things.  I also donât do this out of some perverse hipster desire for retro-computing.  I have work to do.  If my system didnât work, Iâd abandon it tomorrow.  In a way, the cli reminds me of a bike courierâs bicycle.  Some might  think thereâs something âhardcoreâ and cool about a bike that has one gear, no logos, and looks like it flew with the Luftwaffe, but the bike is not that way for style.  Itâs that way because the bells and whistles (i.e. âfeaturesâ) that make a bike attractive in the store get in the way when you have to use it for work.  I find it interesting that after bike couriers started paring down their rides years ago, we soon after witnessed a revival of the fixed-gear, fat-tire, coaster-break bike for adults.  Itâs tempting to say that that was a good thing because âpeople didnât needâ bikes inspired by lightweight racing bikes for what they wanted to do.  But I think you could go further and say that lightweight racing bikes were getting in the way.  Ironically, they were slowing people down.  Iâve spent plenty of time with graphical systems.  Iâm just barely old enough to remember computers without graphical desktops, and like most people, I spent years taking it for granted that for a computer to be usable, it had to have windows, and icons, and wallpapers, and toolbars, and dancing paper clips, and whatever else.  Over the course of the last ten years, all of that has fallen away.  Now, when I try to go back, I feel as if Iâm swimming through a syrupy sea of eye candy in which all the fish speak in incommensurable metaphors.  I should say right away that I am talking about Linux/Unix.  I donât know that I could have made the change successfully on a different platform.  Itâs undoubtedly the case that what makes the cli work is very much about the way Unix works.  So perhaps this is a plea not for the cli so much as for the cli as it has been imagined by Unix and its descendants.  So be it.  Iâd like this to be the first of a series of short essays about my system.  Essentially, Iâd like to run through the things I (and most people) do, and show what itâs like to run your life on the command line.  First up . . .  Email  I think most email programs really suck.  And thatâs a problem, because most people spend insane amounts of time in their email programs.  Why, for starters, do they:  Take so long to load  Unless you keep the app open all the time (Iâm assuming you do that because you have the focus of a guided missile), this is a program that you open and close several times a day.  So why, oh why, does it take so much time to load?  What?  Itâs only a few seconds?  Brothers and sisters, this is a computer.  It should open instantaneously.  You should be able to flit in and out of it with no delay at all.  Boom, itâs here.  Boom, itâs gone.  Not, âSwitch to the workplace that has the Web browser running, open a new tab, go to gmail, and watch a company with more programming power than any other organization on planet earth give you aâ¦progress bar.â  And we wonât even discuss Apple Mail, Outlook, or (people . . .) Lotus Notes.  Integrate so poorly with the rest of the system?  We want to organize our email messages, and most apps do a passable job of that with folders and whatnot.  But they suck when it comes to organizing the content of email messages within the larger organizational scheme of your system.  Some email messages contain things that other people want you to do.  Some email messages have pictures that someone sent you from their vacation.  Some email messages contain relevant information for performing some task.  Some email messages have documents that need to be placed in particular project folders.  Some messages are read-it-later.  Nearly every email app tries to help you with this, but they do so in an extremely inconsistent and inflexible manner.  Gmail gives you âTasks,â but itâs a threadbare parody of the kind of todo lists most people actually need.  Apple mail tries to integrate things with their Calendar app, but now youâre tied to that calendar.  So people sign up for Evernote, or Remember the Milk, or they buy OmniFocus (maybe all three).  Or they go add a bump to the forum for company X in the hope that theyâll write whatever glue is necessary to connect x email program with y task list manager.  I think that you should be able to use any app with any other app in the context of any organizational system.  Go to any LifeHacker-style board and youâll see the same conversation over and over: âI tried OmniOrgMe, but it just seemed too complicated.  I love EternalTask, but it isnât integrated with FragMail . . .â  The idea that the âcloudâ solves this is probably one of the bigger cons in modern computing.   Problem 1 is immediately solved when you switch to a console-based email program.  Pick any one of them.  Type pine or mutt (for example), and your mail is before your eyes in the time it takes a graphical user to move their mouse to the envelope icon.  Type q, and itâs gone.  Such programs tend to integrate well with the general command-line ecosystem, but I will admit that I didnât have problem 2 completely cracked until I switched to an email program that is now over twenty years old: nmh.  Iâve written elsewhere about nmh, so allow me to excerpt (a slightly modified) version of that:     The ânâ in nmh stands for ânew,â but thereâs really nothing new about the program at all. In fact, it was originally developed at the rand Corporation decades ago.      Weâre talking old school. Type âincâ and it sends a numbered list of email subject lines to the screen, and returns you to the prompt.  Type âshowâ and it will display the first message (in any editor you like). You could then refile the message (with ârefileâ) to another mailbox, or archive it, or forward it, and so on.  There are thirty-nine separate commands in the nmh toolset, with names like âscan,â âshow,â âmark,â âsort,â and ârepl.â  On a day-to-day basis, you use maybe three or four.    Iâve been using it for over a year.  It is â hands down â the best email program I have ever used.    Why?  Because the dead simple things you need to do with mail are dead simple. Because there is no mail client in the world that is as fast. Because it never takes over your life (every time you do something, youâre immediately back at the command prompt ready to do something else). Because everything â from the mailboxes to the mail itself â is just an ordinary plain text file ready to be munged.  But most of all, because you can combine the nmh commands with ordinary unix commands to create things that would be difficult if not impossible to do with the gui clients.    I now have a dozen little scripts that do nifty things with mail. I have scripts that archive old mail based on highly idiosyncratic aspects of my email usage. I have scripts that perform dynamic search queries based on analysis of past subject lines. I have scripts that mail todo list items and logs based on cron strings. I have scripts that save attachments to various places based on whatâs in my build files. None of these things are âfeaturesâ of nmh. Theyâre just little scripts that I hacked together with grep, sed, awk, and the shell. And every time I write one, I feel like a genius. The whole system just delights me. I want everything in my life to work like this program.   Okay, I know what youâre thinking: âScripting.  Isnât that, like, programming?  I donât want/know how to do that.â  This objection is going to keep re-appearing, so let me say something about it right away.  The programming weâre talking about for this kind of thing is very simple â so simple, that the skills necessary to carry it off could easily be part of the ordinary skillset of anyone who uses a computer on a regular basis.  An entire industry has risen up around the notion that no user should ever do anything that looks remotely like giving coded instructions to a machine.  I think thatâs another big con, and some day, Iâll prove it to you by writing a tutorial that will turn you into a fearsome shell hacker.  Youâll be stunned at how easy it is.  For now, I just want to make the point that once you move to the command line, everything is trivially connected to everything else, and so you are mostly freed from being locked in to any particular type of tool.  You can use a todo list program that makes Omnifocus look like Notepad.  You can use one that makes Gmail Tasks look like the U.N. Charter.  Once weâre in text land, the output of any program can in principle become the input to any other, and that changes everything.  In the next installment, Iâll demonstrate.  [Greetings ProfHacker fans.  Yes, this post is a little rantish; the conversation continues in a more sober, expansive vein with The Mythical Man-Finger and The Man-Finger Aftermath.  Thanks to one and all for the many comments, which have deepened my thinking on all of this considerably.]
